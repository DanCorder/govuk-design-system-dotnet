@model GovUkDesignSystem.GovUkDesignSystemComponents.TableGovUkViewModel
@using GovUkDesignSystem.GovUkDesignSystemComponents
@{
    string classNames =
        $"govuk-table "
        + $"{(Model == null || String.IsNullOrEmpty(Model.Classes) ? string.Empty : Model.Classes)}";

    string captionClassNames =
        $"govuk-table__caption "
        + $"{(Model == null || String.IsNullOrEmpty(Model.CaptionClasses) ? string.Empty : Model.CaptionClasses)}";

    List<TableCellViewModel> headerRow = new List<TableCellViewModel>();

    if (Model.FirstCellIsHeader)
    {
        if (Model != null && Model.Rows != null && Model.Rows.Count > 0)
        {
            headerRow = Model.Rows[0].Row;
        }
    }
    else
    {
        headerRow = Model.Head;
    }
}
@if (Model != null)
{
    <table class="@classNames" @(Html.Raw(Model.Attributes != null ? string.Join(" ", Model.Attributes.Select(a => a.Key + "=\"" + a.Value + "\"")) : ""))>

        @if (string.IsNullOrEmpty(Model.Caption))
        {
            <caption class="@Model.CaptionClasses">@Model.Caption</caption>
        }

        @if (headerRow.Count > 0)
        {
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    @for (int cellIndex = 0; cellIndex < headerRow.Count; cellIndex++)
                    {
                        string colSpan = headerRow[cellIndex].Colspan >= 0 ? "colspan=" + headerRow[cellIndex].Colspan : string.Empty;
                        string rowSpan = headerRow[cellIndex].Rowspan >= 0 ? "rowspan=" + headerRow[cellIndex].Rowspan : string.Empty;
                        string tableHeadCellClasses = $"govuk-table__header " + $"{(!String.IsNullOrEmpty(headerRow[cellIndex].Format) && headerRow[cellIndex].Format.ToLower() == "mumeric" ? "govuk-table__header--numeric " : string.Empty)}" + $"{(String.IsNullOrEmpty(headerRow[cellIndex].Classes) ? string.Empty : headerRow[cellIndex].Classes)}";
                        <th scope="col" class="@tableHeadCellClasses" @colSpan @rowSpan @(Html.Raw(headerRow[cellIndex].Attributes != null ? string.Join(" ", headerRow[cellIndex].Attributes.Select(a => a.Key + "=\"" + a.Value + "\"")) : ""))>
                            @{
                                await Html.RenderPartialAsync("/GovUkDesignSystemComponents/SubComponents/HtmlText.cshtml", headerRow[cellIndex]);
                            }
                        </th>
                    }
                </tr>
            </thead>
        }

        @if (Model.Rows.Count > 0)
        {
            <tbody class="govuk-table__body">
                @for (var rowIndex = Model.FirstCellIsHeader ? 1 : 0; rowIndex < Model.Rows.Count; rowIndex++)
                {
                    <tr class="govuk-table__row">
                        @for (var cellIndex = 0; cellIndex < Model.Rows[rowIndex].Row.Count; cellIndex++)
                        {
                            string colSpan = Model.Rows[rowIndex].Row[cellIndex].Colspan >= 0 ? "colspan=" + Model.Rows[rowIndex].Row[cellIndex].Colspan : string.Empty;
                            string rowSpan = Model.Rows[rowIndex].Row[cellIndex].Rowspan >= 0 ? "rowspan=" + Model.Rows[rowIndex].Row[cellIndex].Rowspan : string.Empty;
                            string tableBodyCellClasses = $"{(cellIndex == 0 ? "govuk-table__header " : "govuk-table__cell ")} " + $"{(!String.IsNullOrEmpty(Model.Rows[rowIndex].Row[cellIndex].Format) && Model.Rows[rowIndex].Row[cellIndex].Format.ToLower() == "mumeric" ? "govuk-table__cell--numeric " : string.Empty)}" + $"{(String.IsNullOrEmpty(Model.Rows[rowIndex].Row[cellIndex].Classes) ? string.Empty : Model.Rows[rowIndex].Row[cellIndex].Classes)}";

                            if (cellIndex == 0)
                            {
                                <th scope="row" class="@tableBodyCellClasses" @colSpan @rowSpan @(Html.Raw(Model.Rows[rowIndex].Row[cellIndex].Attributes != null ? string.Join(" ", Model.Rows[rowIndex].Row[cellIndex].Attributes.Select(a => a.Key + "=\"" + a.Value + "\"")) : ""))>
                                    @{
                                        await Html.RenderPartialAsync("/GovUkDesignSystemComponents/SubComponents/HtmlText.cshtml", Model.Rows[rowIndex].Row[cellIndex]);
                                    }
                                </th>
                            }
                            else
                            {
                                <td class="@tableBodyCellClasses" @colSpan @rowSpan @(Html.Raw(Model.Rows[rowIndex].Row[cellIndex].Attributes != null ? string.Join(" ", Model.Rows[rowIndex].Row[cellIndex].Attributes.Select(a => a.Key + "=\"" + a.Value + "\"")) : ""))>
                                    @{
                                        await Html.RenderPartialAsync("/GovUkDesignSystemComponents/SubComponents/HtmlText.cshtml", Model.Rows[rowIndex].Row[cellIndex]);
                                    }
                                </td>
                            }
                        }
                    </tr>
                }
            </tbody>
        }
    </table>
}